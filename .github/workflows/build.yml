name: build
on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
env:
  FLUTTER_CHANNEL: stable
jobs:
  android-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with: { channel: ${{ env.FLUTTER_CHANNEL }} }
      - run: flutter pub get
      - run: flutter build appbundle --release --target-platform=android-arm64
      - run: flutter build apk --release --target-platform=android-arm64
      - uses: actions/upload-artifact@v4
        with:
          name: android-arm64
          retention-days: 7
          path: |
            build/app/outputs/bundle/release/*.aab
            build/app/outputs/flutter-apk/*-arm64-v8a*.apk
            build/app/outputs/flutter-apk/app-release.apk

  windows-amd64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with: { channel: ${{ env.FLUTTER_CHANNEL }} }
      - run: flutter pub get
      - run: flutter build windows --release
      - name: Zip windows x64
        run: |
          cd build/windows/x64/runner/Release
          powershell -Command "Compress-Archive -Path * -DestinationPath ../../../app-windows-amd64.zip"
      - uses: actions/upload-artifact@v4
        with:
          name: windows-amd64
          retention-days: 7
          path: build/app-windows-amd64.zip

  macos-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with: { channel: ${{ env.FLUTTER_CHANNEL }} }
      - run: flutter pub get
      - run: flutter build macos --release
      - name: Build DMG (drag-and-drop)
        shell: bash
        run: |
          set -e
          APP_PATH=$(ls -1 build/macos/Build/Products/Release/*.app | head -n1)
          if [[ -z "$APP_PATH" ]]; then echo "No .app found"; exit 1; fi
          APP_NAME=$(basename "$APP_PATH" .app)
          DMG="build/${APP_NAME}-macos-arm64.dmg"
          mkdir -p build/dmgroot
          cp -R "$APP_PATH" build/dmgroot/
          ln -s /Applications build/dmgroot/Applications || true
          hdiutil create -volname "$APP_NAME" -srcfolder build/dmgroot -ov -format UDZO "$DMG"
          echo "DMG at $DMG"
      - uses: actions/upload-artifact@v4
        with:
          name: macos-arm64
          retention-days: 7
          path: build/*-macos-arm64.dmg

  linux-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with: { channel: ${{ env.FLUTTER_CHANNEL }} }
      - name: Install Linux desktop deps
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      - run: flutter pub get
      - run: flutter build linux --release
      - name: Pack linux x64
        run: |
          tar -C build/linux/x64/release/bundle -czf build/app-linux-amd64.tar.gz .
      - uses: actions/upload-artifact@v4
        with:
          name: linux-amd64
          retention-days: 7
          path: build/app-linux-amd64.tar.gz
