name: release
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  FLUTTER_CHANNEL: stable

jobs:
  android-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true
          java-version: '17'
      - run: flutter pub get
      - run: flutter build appbundle --release --target-platform=android-arm64
      - run: flutter build apk --release --target-platform=android-arm64 --split-per-abi
      - name: Package android arm64 artifacts
        run: |
          set -euxo pipefail
          mkdir -p build/artifacts
          AAB=$(ls -1 build/app/outputs/bundle/release/*.aab | head -n1)
          APK=$(ls -1 build/app/outputs/flutter-apk/*arm64-v8a*.apk | head -n1)
          cp "$AAB" build/artifacts/
          cp "$APK" build/artifacts/
          (cd build/artifacts && zip -9 -r ../android-arm64.zip .)
      - uses: actions/upload-artifact@v4
        with:
          name: android-arm64
          path: build/android-arm64.zip
          if-no-files-found: error

  linux-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true
      - run: sudo apt-get update && sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libkeybinder-3.0-0 libkeybinder-3.0-dev
      - run: flutter config --enable-linux-desktop
      - run: flutter pub get
      - run: flutter build linux --release
      - run: tar -C build/linux/x64/release/bundle -czf build/linux-amd64.tar.gz .
      - uses: actions/upload-artifact@v4
        with:
          name: linux-amd64
          path: build/linux-amd64.tar.gz
          if-no-files-found: error

  windows-amd64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true
      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      - run: flutter build windows --release
      - shell: pwsh
        run: |
          cd build/windows/x64/runner/Release
          Compress-Archive -Path * -DestinationPath ../../../windows-amd64.zip
      - uses: actions/upload-artifact@v4
        with:
          name: windows-amd64
          path: build/windows-amd64.zip
          if-no-files-found: error

  macos-arm64:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true
      - run: flutter config --enable-macos-desktop
      - run: flutter pub get
      - run: flutter build macos --release
      - name: Create DMG
        run: |
          APP_PATH=$(ls -1 build/macos/Build/Products/Release/*.app | head -n1)
          APP_NAME=$(basename "$APP_PATH" .app)
          DMG="build/macos-arm64.dmg"
          mkdir -p build/dmgroot
          cp -R "$APP_PATH" build/dmgroot/
          ln -s /Applications build/dmgroot/Applications || true
          hdiutil create -volname "$APP_NAME" -srcfolder build/dmgroot -ov -format UDZO "$DMG"
      - uses: actions/upload-artifact@v4
        with:
          name: macos-arm64
          path: build/macos-arm64.dmg
          if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    needs: [android-arm64, linux-amd64, windows-amd64, macos-arm64]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: List artifacts to release
        run: |
          ls -R dist || true
      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/android-arm64/android-arm64.zip
            dist/windows-amd64/windows-amd64.zip
            dist/macos-arm64/macos-arm64.dmg
            dist/linux-amd64/linux-amd64.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
